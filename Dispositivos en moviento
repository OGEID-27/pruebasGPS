gps_tracking_app/
│
├── backend/
│   ├── app.py
│   └── models.py
│
└── frontend/
    ├── index.html
    └── script.js

backend/app.py

from flask import Flask, request, jsonify
from flask_cors import CORS
from models import Device

app = Flask(__name__)
CORS(app)

devices = {}

@app.route('/update_location', methods=['POST'])
def update_location():
    data = request.json
    device_id = data['device_id']
    latitude = data['latitude']
    longitude = data['longitude']
    
    if device_id not in devices:
        devices[device_id] = Device(device_id)
        
    devices[device_id].update_location(latitude, longitude)
    
    return jsonify({'message': 'Location updated successfully'})

@app.route('/get_devices', methods=['GET'])
def get_devices():
    return jsonify([device.to_dict() for device in devices.values()])

if __name__ == '__main__':
    app.run(debug=True)

backend/models.py

class Device:
    def __init__(self, device_id):
        self.device_id = device_id
        self.latitude = None
        self.longitude = None
    
    def update_location(self, latitude, longitude):
        self.latitude = latitude
        self.longitude = longitude
        
    def to_dict(self):
        return {
            'device_id': self.device_id,
            'latitude': self.latitude,
            'longitude': self.longitude
        }

frontend/index.html

<!DOCTYPE html>
<html>
<head>
    <title>GPS Tracking App</title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <style>
        #map {
            height: 500px;
            width: 100%;
        }
    </style>
</head>
<body>
    <div id="map"></div>
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script src="script.js"></script>
</body>
</html>


Frontend/script.js

const map = L.map('map').setView([0, 0], 2);

L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
    attribution: '© OpenStreetMap contributors'
}).addTo(map);

function updateDevices() {
    fetch('http://localhost:5000/get_devices')
        .then(response => response.json())
        .then(devices => {
            devices.forEach(device => {
                if (device.latitude && device.longitude) {
                    const marker = L.marker([device.latitude, device.longitude]).addTo(map);
                    marker.bindPopup(`<b>Device ID:</b> ${device.device_id}<br><b>Latitude:</b> ${device.latitude}<br><b>Longitude:</b> ${device.longitude}`).openPopup();
                }
            });
        });
}

setInterval(updateDevices, 5000); // Actualiza la ubicación de los dispositivos cada 5 segundos
